image:
  repository: somerepo/kube-openmpi
  tag: 0.7.0
  pullPolicy: IfNotPresent
  # pullSecrets:
  # - name: ""

networkPolicy:
  enabled: false

sshGateway:
  enabled: false
  nodePort: 30220

# kube-openmpi cluster consists of 1-Master and N-Workers.
# master is the place you will invoke mpirun/mpiexec.
# 'hostfile' will be automatically generated/updated
# and is available at '/kube-openmpi/generated/hostfile'.
mpiMaster:
  autoUpdateHostfile:
    enabled: true
  # securityContext:
  #   capabilities:
  #     add:
  #     - SYS_PTRACE
  #   runAsUser: 1000
  #   fsGroup: 1000
  # oneShot:
  # If oneShot.enabled=true, mater automatically runs oneShot.command and complete self.
  #   enabled: true
  #   # This will scale workers down to 0 when command completed successfully.
  #   autoScaleDownWorkers: true
  #   command: |
  #     mpiexec --allow-run-as-root \
  #       --hostfile /kube-openmpi/generated/hostfile \
  #       --display-map -n 4 -npernode 1 \
  #       sh -c 'echo $(hostname):hello'
  resources:
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumes:
  - name: cache-volume
    # emptyDir: {}
    # hostPath:
    #   path: /cache
    #   type: Directory
    persistentVolumeClaim:
      claimName: gridcache
  - name: grid-data
    # hostPath:
    #   path: /home/ubuntu/SKA-crocodile/data
    #   type: Directory
    persistentVolumeClaim:
      claimName: griddata
  volumeMounts:
  - mountPath: /cache
    name: cache-volume
  - mountPath: /src/crocodile/data
    name: grid-data


mpiWorkers:
  num: 3
  # securityContext:
  #   capabilities:
  #     add:
  #     - SYS_PTRACE
  # securityContext:
  #   runAsUser: 1000
  #   fsGroup: 1000
  # customScheduling:
  #   enabled: true
  #   schedulerName: kube-batchd
  #   podDisruptionBudget:
  #     enabled: true
  resources:
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    #  gpu: 1
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
    #  gpu: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumes:
  - name: cache-volume
    # emptyDir: {}
    # hostPath:
    #   path: /cache
    #   type: Directory
    persistentVolumeClaim:
      claimName: gridcache
  - name: grid-data
    # hostPath:
    #   path: /home/ubuntu/SKA-crocodile/data
    #   type: Directory
    persistentVolumeClaim:
      claimName: griddata
  volumeMounts:
  - mountPath: /cache
    name: cache-volume
  - mountPath: /src/crocodile/data
    name: grid-data

appCodesToSync:
# - name: chainermn
#   gitRepo: https://github.com/chainer/chainermn.git
#   gitBranch: master
#   fetchWaitSecond: "120"
#   mountPath: /chainermn-examples
#   subPath: chainermn/examples
# - name: chainer
#   gitRepo: https://github.com/chainer/chainer.git
#   gitBranch: master
#   fetchWaitSecond: "120"
#   mountPath: /chainer-examples
#   subPath: chainer/examples
# - name: your-secret-repo
#   gitRepo: git@github.com:your-org/your-secret-repo.git
#   gitBranch: master
#   fetchWaitSecond: "120"
#   mountPath: /your-secret-repo
#   gitSecretName: git-sync-creds
